# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    # Configure Gradle for optimal use in GiHub Actions, including caching of downloaded dependencies.
    # See: https://github.com/gradle/actions/blob/main/setup-gradle/README.md
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Run chmod to make gradlew executable
      run: chmod +x ./gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew build

#    - name: pwd
#      run: scp build/libs/demo-0.0.1-SNAPSHOT.jar hee@192.168.000.000:/test

#    - name: rsync deployments
#      uses: contention/rsync-deployments@v2.0.0
#      with:
#        FLAGS: -avzr --delete
#        EXCLUDES: --exclude .htaccess --exclude /uploads/
#        USER: hee
#        HOST: ${{ secrets.HOST }}
#        LOCALPATH: /
#        REMOTEPATH: /home/hee/v2
#        DEPLOY_KEY: ${{ secrets.PASSWORD }}
#        switches: -avzr --delete
#        path: /
#        remote_path: /home/hee/v2
#        remote_host: ${{ secrets.HOST }}
#        remote_user: hee
#        remote_key: ${{ secrets.PASSWORD }}
#        remote_port: ${{ secrets.PORT }}

    - name: copy file via ssh password to server
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.HOST }}
        username: hee
        key: ${{ secrets.PASSWORD }}
        port: ${{ secrets.PORT }}
        source: build/libs/demo-0.0.1-SNAPSHOT.jar
        target: /home/hee/v2
#        script: |
#          whoami
#          ls -al
